{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"RaBe Cat Landing Page","text":"<p>Overengineered intranet landing page for Radio Bern RaBe.</p> <p></p>"},{"location":"#usage","title":"Usage","text":"<ol> <li>Navigate to page</li> <li>Find services</li> <li>See cat</li> <li>???</li> <li>PROFIT!!!</li> </ol>"},{"location":"#configuration","title":"Configuration","text":"<p>See <code>python app/server.py --help</code> for usage message and configuration info.</p>"},{"location":"#container","title":"Container","text":"<pre><code># using docker\ndocker run --rm -ti -p 8080:8080 ghcr.io/radiorabe/catpage\n# or podman\npodman run --rm -ti -p 8080:8080 ghcr.io/radiorabe/catpage\n</code></pre> <p>Connect to localhost:8080.</p>"},{"location":"#podman-compose","title":"Podman-compose","text":"<pre><code>cp env.example .env\n$EDITOR .env\npodman-compose up -d\n</code></pre>"},{"location":"#kubernetes","title":"Kubernetes","text":"<pre><code>helm install catpage oci://ghcr.io/radiorabe/helm/catpage --version x.y.z\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions are welcome. Please keep in mind that everything here is completely overengineered.</p>"},{"location":"#development","title":"Development","text":""},{"location":"#setup","title":"Setup","text":"<pre><code>python -mvenv venv\n. ./venv/bin/activate\n\npipx install poetry\n\npoetry install\n</code></pre>"},{"location":"#running-tests","title":"Running tests","text":"<p>You can run our tests with <code>pytest</code>. Please keep in mind that we expect to keep the coverage at 100% and that this is enforced by CI.</p> <pre><code>poetry run pytest\n</code></pre>"},{"location":"#formating-code-using-a-pre-commit-hook","title":"Formating code using a pre-commit hook","text":"<p>There is a pre-commit hook facility that tests code for formating and validity. You should install run this on your dev env to ensure that all the code is properly formatted and your changes will pass CI.</p> <pre><code>pip install pre-commit\npre-commit install\n</code></pre>"},{"location":"#commiting-with-commitizen","title":"Commiting with commitizen","text":"<p>This project uses conventional-changelog style commit messages to help generate proper releases. Please check out the <code>git-cz</code> helper to help with formatting commit messages.</p> <pre><code>npm install -g commitizen cz-conventional-changelog\n</code></pre>"},{"location":"#creating-a-pull-request","title":"Creating a Pull Request","text":"<p>Once your contribution is ready you can use the GitHub interface to create a pull request. Please try to keep your individual contribution self contained in a single squashed commit. This helps so that the maintainers can just hit \"Squash and merge\" instead of \"Rebase and merge\".</p>"},{"location":"#license","title":"License","text":"<p>This application is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, version 3 of the License.</p>"},{"location":"#copyright","title":"Copyright","text":"<p>Copyright (c) 2019 Radio Bern RaBe</p>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>app</li> </ul>"},{"location":"reference/app/","title":"app","text":""}]}